% Ejemplo de artículo de conferencia
@inproceedings{borrego2019,
  title={Generating Rules to Filter Candidate Triples for their Correctness Checking by Knowledge Graph Completion Techniques},
  author={Agust{\'i}n Borrego and Daniel Ayala and Inma Hern{\'a}ndez and Carlos R. Rivero and David Ruiz},
  booktitle={{K-CAP}},
  pages={115--122},
  year={2019},
  doi={10.1145/3360901.3364418},
}

% Ejemplo de artículo de revista
@article{borrego2021,
  author    = {Agust{\'i}n Borrego and Daniel Ayala and Inma Hern{\'a}ndez and Carlos R. Rivero and David Ruiz},
  title     = {{CAFE:} Knowledge graph completion using neighborhood-aware features},
  journal   = {Eng. Appl. Artif. Intell.},
  volume    = {103},
  pages     = {104302},
  year      = {2021},
  url       = {https://doi.org/10.1016/j.engappai.2021.104302},
  doi       = {10.1016/j.engappai.2021.104302},
}

% Ejemplo de enlace web
@misc{webETSII,
  title={Página principal de la Escuela Técnica de Ingeniería Informática},
  author={Universidad de Sevilla},
  year={2020},
  url={https://www.informatica.us.es}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%DevSecOps
@article{FITZGERALD2017176,
title = {Continuous software engineering: A roadmap and agenda},
journal = {Journal of Systems and Software},
volume = {123},
pages = {176-189},
year = {2017},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2015.06.063},
url = {https://www.sciencedirect.com/science/article/pii/S0164121215001430},
author = {Brian Fitzgerald and Klaas-Jan Stol},
keywords = {Continuous software engineering, Lean software development, DevOps},
abstract = {Throughout its short history, software development has been characterized by harmful disconnects between important activities such as planning, development and implementation. The problem is further exacerbated by the episodic and infrequent performance of activities such as planning, testing, integration and releases. Several emerging phenomena reflect attempts to address these problems. For example, Continuous Integration is a practice which has emerged to eliminate discontinuities between development and deployment. In a similar vein, the recent emphasis on DevOps recognizes that the integration between software development and its operational deployment needs to be a continuous one. We argue a similar continuity is required between business strategy and development, BizDev being the term we coin for this. These disconnects are even more problematic given the need for reliability and resilience in the complex and data-intensive systems being developed today. We identify a number of continuous activities which together we label as ‘Continuous *’ (i.e. Continuous Star) which we present as part of an overall roadmap for Continuous Software engineering. We argue for a continuous (but not necessarily rapid) software engineering delivery pipeline. We conclude the paper with a research agenda.}
}
