% Ejemplo de artículo de conferencia
@inproceedings{borrego2019,
  title={Generating Rules to Filter Candidate Triples for their Correctness Checking by Knowledge Graph Completion Techniques},
  author={Agust{\'i}n Borrego and Daniel Ayala and Inma Hern{\'a}ndez and Carlos R. Rivero and David Ruiz},
  booktitle={{K-CAP}},
  pages={115--122},
  year={2019},
  doi={10.1145/3360901.3364418},
}

% Ejemplo de artículo de revista
@article{borrego2021,
  author    = {Agust{\'i}n Borrego and Daniel Ayala and Inma Hern{\'a}ndez and Carlos R. Rivero and David Ruiz},
  title     = {{CAFE:} Knowledge graph completion using neighborhood-aware features},
  journal   = {Eng. Appl. Artif. Intell.},
  volume    = {103},
  pages     = {104302},
  year      = {2021},
  url       = {https://doi.org/10.1016/j.engappai.2021.104302},
  doi       = {10.1016/j.engappai.2021.104302},
}

% Ejemplo de enlace web
@misc{webETSII,
  title={Página principal de la Escuela Técnica de Ingeniería Informática},
  author={Universidad de Sevilla},
  year={2020},
  url={https://www.informatica.us.es}
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%DevSecOps

%Referencias Bibliográficas PS DevSecOps 
@article{FITZGERALD2017176,
title = {Continuous software engineering: A roadmap and agenda},
journal = {Journal of Systems and Software},
volume = {123},
pages = {176-189},
year = {2017},
issn = {0164-1212},
doi = {https://doi.org/10.1016/j.jss.2015.06.063},
url = {https://www.sciencedirect.com/science/article/pii/S0164121215001430},
author = {Brian Fitzgerald and Klaas-Jan Stol},
keywords = {Continuous software engineering, Lean software development, DevOps},
abstract = {Throughout its short history, software development has been characterized by harmful disconnects between important activities such as planning, development and implementation. The problem is further exacerbated by the episodic and infrequent performance of activities such as planning, testing, integration and releases. Several emerging phenomena reflect attempts to address these problems. For example, Continuous Integration is a practice which has emerged to eliminate discontinuities between development and deployment. In a similar vein, the recent emphasis on DevOps recognizes that the integration between software development and its operational deployment needs to be a continuous one. We argue a similar continuity is required between business strategy and development, BizDev being the term we coin for this. These disconnects are even more problematic given the need for reliability and resilience in the complex and data-intensive systems being developed today. We identify a number of continuous activities which together we label as ‘Continuous *’ (i.e. Continuous Star) which we present as part of an overall roadmap for Continuous Software engineering. We argue for a continuous (but not necessarily rapid) software engineering delivery pipeline. We conclude the paper with a research agenda.}
}
%#########################################################
@Inbook{Bosch2014,
author="Bosch, Jan",
title="Continuous Software Engineering: An Introduction",
bookTitle="Continuous Software Engineering",
year="2014",
publisher="Springer International Publishing",
address="Cham",
pages="3--13",
abstract="Software-intensive industries are experiencing an unprecedented evolution of, among others, business models, architectures, ways of working, tooling, and deployment. This transformation allows companies to respond much quicker to changes in the market and to build solutions that much more accurately align with customer needs. The Nordic software-intensive systems industry recognized this challenge and partnered with academia to form the Software Center. The role of the Software Center is to significantly accelerate the rate of adoption of these new approaches at the partner organizations. In this chapter, we discuss the industry trends, introduce the Software Center, and provide an overview of the remainder of the book. This book presents the core results of the first phase (2011--2013) of the Software Center.",
isbn="978-3-319-11283-1",
doi="10.1007/978-3-319-11283-1_1",
url="https://doi.org/10.1007/978-3-319-11283-1_1"
}
%##########################################################
@article{Shahin2017ContinuousID,
title={Continuous Integration, Delivery and Deployment: A Systematic Review on Approaches, Tools, Challenges and Practices},
author={Mojtaba Shahin and Muhammad Ali Babar and Liming Zhu},
journal={IEEE Access},
year={2017},
volume={5},
pages={3909-3943}
}
%#####################################################################
@article{10.1007/s10664-018-9651-4,
author = {Shahin, Mojtaba and Zahedi, Mansooreh and Babar, Muhammad Ali and Zhu, Liming},
title = {An Empirical Study of Architecting for Continuous Delivery and Deployment},
year = {2019},
issue_date = {Jun 2019},
publisher = {Kluwer Academic Publishers},
address = {USA},
volume = {24},
number = {3},
issn = {1382-3256},
url = {https://doi.org/10.1007/s10664-018-9651-4},
doi = {10.1007/s10664-018-9651-4},
abstract = {Recently, many software organizations have been adopting Continuous Delivery and Continuous Deployment (CD) practices to develop and deliver quality software more frequently and reliably. Whilst an increasing amount of the literature covers different aspects of CD, little is known about the role of software architecture in CD and how an application should be (re-) architected to enable and support CD. We have conducted a mixed-methods empirical study that collected data through in-depth, semi-structured interviews with 21 industrial practitioners from 19 organizations, and a survey of 91 professional software practitioners. Based on a systematic and rigorous analysis of the gathered qualitative and quantitative data, we present a conceptual framework to support the process of (re-) architecting for CD. We provide evidence-based insights about practicing CD within monolithic systems and characterize the principle of "small and independent deployment units" as an alternative to the monoliths. Our framework supplements the architecting process in a CD context through introducing the quality attributes (e.g., resilience) that require more attention and demonstrating the strategies (e.g., prioritizing operations concerns) to design operations-friendly architectures. We discuss the key insights (e.g., monoliths and CD are not intrinsically oxymoronic) gained from our study and draw implications for research and practice.},
journal = {Empirical Softw. Engg.},
month = {jun},
pages = {1061–1108},
numpages = {48},
keywords = {DevOps, Continuous deployment, Continuous delivery, Empirical study, Software architecture}
}
%###########################################################
@article{Schermann,
author = {Schermann, Gerald and Cito, Jürgen and Leitner, Philipp and Zdun, Uwe and Gall, Harald},
year = {2016},
month = {03},
journal = {.},
pages = {},
title = {An empirical study on principles and practices of continuous delivery and deployment},
doi = {10.7287/peerj.preprints.1889}
}
%##############################################################
@inproceedings{10.1145/3383219.3383224,
author = {Zahedi, Mansooreh and Rajapakse, Roshan Namal and Babar, Muhammad Ali},
title = {Mining Questions Asked about Continuous Software Engineering: A Case Study of Stack Overflow},
year = {2020},
isbn = {9781450377317},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3383219.3383224},
doi = {10.1145/3383219.3383224},
abstract = {Context: With the growing popularity of rapid software delivery and deployment, the methods, practices and technologies of Continuous Software Engineering (CSE) are evolving steadily. This creates the need for understanding the recent trends of the technologies, practitioners' challenges and views in this domain. Objective: In this paper, we present an empirical study aimed at exploring CSE from the practitioners' perspective by mining discussions from Q&A websites. Method: We have analyzed 12,989 questions and answers posted on Stack Overflow. Topic modelling is conducted to derive the dominant topics in this domain. Further, a qualitative analysis was conducted to identify the key challenges discussed. Findings: Whilst the trend of posted questions is sharply increasing, the questions are becoming more specific to technologies and more difficult to attract answers. We identified 32 topics of discussions, among which "Error messages in Continuous Integration/Deployment" and "Continuous Integration concepts" are the most dominant. We also present the most challenging areas in this domain from the practitioners' perspectives.},
booktitle = {Proceedings of the Evaluation and Assessment in Software Engineering},
pages = {41–50},
numpages = {10},
keywords = {continuous software engineering, qualitative analysis, continuous deployment, stack overflow, continuous integration, mining software repositories, topic modelling},
location = {Trondheim, Norway},
series = {EASE '20}
}
%##################################################################
@article{Sthl2017ContinuousPA,
title={Continuous practices and devops: beyond the buzz, what does it all mean?},
author={Daniel St{\aa}hl and Torvald M{\aa}rtensson and J. Bosch},
journal={2017 43rd Euromicro Conference on Software Engineering and Advanced Applications (SEAA)},
year={2017},
pages={440-448}
}
%###################################################################
@ARTICLE{7057604,
author={Leppänen, Marko and Mäkinen, Simo and Pagels, Max and Eloranta, Veli-Pekka and Itkonen, Juha and Mäntylä, Mika V. and Männistö, Tomi},
journal={IEEE Software}, 
title={The highways and country roads to continuous deployment}, 
year={2015},
volume={32},
number={2},
pages={64-72},
doi={10.1109/MS.2015.50}}
%###################################################################
@ARTICLE{7006384,
author={Chen, Lianping},
journal={IEEE Software}, 
title={Continuous Delivery: Huge Benefits, but Challenges Too}, 
year={2015},
volume={32},
number={2},
pages={50-54},
doi={10.1109/MS.2015.27}}
%###############################################################
@ARTICLE{7465693,
author={Weber, Ingo and Nepal, Surya and Zhu, Liming},
journal={IEEE Internet Computing}, 
title={Developing Dependable and Secure Cloud Applications}, 
year={2016},
volume={20},
number={3},
pages={74-79},
doi={10.1109/MIC.2016.67}}
%############################################################
@book{BassDevOpsA2015,
title = {DevOps: A Software Architect's Perspective},
author={Len Bass and Ingo Weber and Liming Zhu},
year={2015},
publisher={Addison-Wesley Professional},
}
%###########################################################
@article{10.1145/3359981,
author = {Leite, Leonardo and Rocha, Carla and Kon, Fabio and Milojicic, Dejan and Meirelles, Paulo},
title = {A Survey of DevOps Concepts and Challenges},
year = {2019},
issue_date = {November 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {6},
issn = {0360-0300},
url = {https://doi.org/10.1145/3359981},
doi = {10.1145/3359981},
abstract = {DevOpsis a collaborative and multidisciplinary organizational effort to automate continuous delivery of new software updates while guaranteeing their correctness and reliability. The present survey investigates and discusses DevOps challenges from the perspective of engineers, managers, and researchers. We review the literature and develop a DevOps conceptual map, correlating the DevOps automation tools with these concepts. We then discuss their practical implications for engineers, managers, and researchers. Finally, we critically explore some of the most relevant DevOps challenges reported by the literature.},
journal = {ACM Comput. Surv.},
month = {nov},
articleno = {127},
numpages = {35},
keywords = {release process, DevOps, versioning, and build process, configuration management, continuous (delivery, deployment, integration)}
}

@book{DevOpsHandbook,
edition = {2ª},
title = {The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations},
isbn = {978-1942788003},
shorttitle = {The DevOps Handbook},
url = {https://www.amazon.com/DevOps-Handbook-World-Class-Reliability-Organizations/dp/1942788002},
abstract = {Increase profitability, elevate work culture, and exceed productivity goals through DevOps practices.},
language = {English},
author = {Kim, Gene and Humble, Jez and Willis, John},
publisher = {IT Revolution Press},
month = aug,
year = {2016},
}
